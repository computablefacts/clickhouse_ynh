#!/bin/bash

#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

### Install parameters are automatically saved as settings
###
### Settings are automatically loaded as bash variables
### in every app script context, therefore typically these will exist:
### - $domain
### - $path
### - $language
### ... etc
###
### Resources defined in the manifest are provisioned prior to this script
### and corresponding settings are also available, such as:
### - $install_dir
### - $port
### - $db_name
### ...
###
### $app is the app id (i.e. 'example' for first install,
### or 'example__2', '__3', ... for multi-instance installs)

#=================================================
# INITIALIZE AND STORE SETTINGS
#=================================================

password_sha256_hex=$(echo -n "$password" | sha256sum | tr -d '-' | xargs)
ynh_app_setting_set --app=$app --key=admin --value=$admin
ynh_app_setting_set --app=$app --key=password_sha256_hex --value=$password_sha256_hex

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Setting up source files..." --weight=1

# See: https://clickhouse.com/docs/en/install#from-tgz-archives
# NOTA: I do not install clickhouse-common-static-dbg that seams not mandatory
# Download, check integrity, uncompress and patch the source from manifest.toml
ynh_setup_source --source_id=common-static --dest_dir="$install_dir/common-static"
ynh_setup_source --source_id=server --dest_dir="$install_dir/server"
ynh_setup_source --source_id=client --dest_dir="$install_dir/client"

### $install_dir will automatically be initialized with some decent
### permission by default ... however, you may need to recursively reapply
### ownership to all files such as after the ynh_setup_source step
chown -R "$app:www-data" "$install_dir"

# Create a shared SFTP directory
mkdir -p /home/shared/clickhouse
# Create user directories and link them to data_dir
mkdir -p /home/shared/clickhouse/user_files
ln -s /home/shared/clickhouse/user_files $data_dir/user_files
chown "$app:$app" "$data_dir/user_files"
mkdir -p /home/shared/clickhouse/user_defined
ln -s /home/shared/clickhouse/user_defined $data_dir/user_defined
chown "$app:$app" "$data_dir/user_files"
mkdir -p /home/shared/clickhouse/user_scripts
ln -s /home/shared/clickhouse/user_scripts $data_dir/user_scripts
chown "$app:$app" "$data_dir/user_files"

chmod -R 777 /home/shared/clickhouse

$install_dir/common-static/install/doinst.sh
$install_dir/server/install/doinst.sh
$install_dir/client/install/doinst.sh

# Needed to give read access to YunoHost SSL certificates for the domain
usermod -a -G ssl-cert $app

#=================================================
# APP INITIAL CONFIGURATION
#=================================================
ynh_script_progression --message="Adding $app's configuration files..." --weight=1

### You can add specific configuration files.
###
### Typically, put your template conf file in ../conf/your_config_file
### The template may contain strings such as __FOO__ or __FOO_BAR__,
### which will automatically be replaced by the values of $foo and $foo_bar
###
### ynh_add_config will also keep track of the config file's checksum,
### which later during upgrade may allow to automatically backup the config file
### if it's found that the file was manually modified
###
### Check the documentation of `ynh_add_config` for more info.

chown "$app:$app" "/etc/clickhouse-server/config.xml"
mkdir -p "/etc/clickhouse-server/config.d/"
chown "$app:$app" "/etc/clickhouse-server/config.d/"
ynh_add_config --template="config.d/00-remove-unused-parts.xml" --destination="/etc/clickhouse-server/config.d/00-remove-unused-parts.xml"
ynh_add_config --template="config.d/ldap.xml" --destination="/etc/clickhouse-server/config.d/ldap.xml"
ynh_add_config --template="config.d/listen.xml" --destination="/etc/clickhouse-server/config.d/listen.xml"
ynh_add_config --template="config.d/logger.xml" --destination="/etc/clickhouse-server/config.d/logger.xml"
ynh_add_config --template="config.d/openSSL.xml" --destination="/etc/clickhouse-server/config.d/openSSL.xml"
ynh_add_config --template="config.d/paths.xml" --destination="/etc/clickhouse-server/config.d/paths.xml"
ynh_add_config --template="config.d/remove-log-tables.xml" --destination="/etc/clickhouse-server/config.d/remove-log-tables.xml"
ynh_add_config --template="config.d/tcp_port_secure.xml" --destination="/etc/clickhouse-server/config.d/tcp_port_secure.xml"
ynh_add_config --template="config.d/user_directories.xml" --destination="/etc/clickhouse-server/config.d/user_directories.xml"

chown "$app:$app" "/etc/clickhouse-server/users.xml"
mkdir -p "/etc/clickhouse-server/users.d/"
chown "$app:$app" "/etc/clickhouse-server/users.d/"
ynh_add_config --template="users.d/00-remove-unused-parts.xml" --destination="/etc/clickhouse-server/users.d/00-remove-unused-parts.xml"
ynh_add_config --template="users.d/admin.xml" --destination="/etc/clickhouse-server/users.d/admin.xml"
ynh_add_config --template="users.d/profiles.xml" --destination="/etc/clickhouse-server/users.d/profiles.xml"
ynh_add_config --template="users.d/quotas.xml" --destination="/etc/clickhouse-server/users.d/quotas.xml"


#=================================================
# SYSTEM CONFIGURATION
#=================================================
ynh_script_progression --message="Adding system configurations related to $app..." --weight=1

# Create a dedicated NGINX config using the conf/nginx.conf template
ynh_add_nginx_config

### `yunohost service add` integrates a service in YunoHost. It then gets
### displayed in the admin interface and through the others `yunohost service` commands.
### (N.B.: this line only makes sense if the app adds a service to the system!)
### If you're not using these lines:
###   - You can remove these files in conf/.
###   - Remove the section "REMOVE SERVICE INTEGRATION IN YUNOHOST" in the remove script
###   - As well as the section "INTEGRATE SERVICE IN YUNOHOST" in the restore script
###   - And the section "INTEGRATE SERVICE IN YUNOHOST" in the upgrade script

### Additional options starting with 3.8:
###
### --needs_exposed_ports "$port" a list of ports that needs to be publicly exposed
###                               which will then be checked by YunoHost's diagnosis system
###                               (N.B. DO NOT USE THIS if the port is only internal!!!)
###
### --test_status "some command"  a custom command to check the status of the service
###                               (only relevant if 'systemctl status' doesn't do a good job)
###
### --test_conf "some command"    some command similar to "nginx -t" that validates the conf of the service
###
### Re-calling 'yunohost service add' during the upgrade script is the right way
### to proceed if you later realize that you need to enable some flags that
### weren't enabled on old installs (be careful it'll override the existing
### service though so you should re-provide all relevant flags when doing so)
mkdir -p /var/log/clickhouse-server
chown "$app:$app" /var/log/clickhouse-server
yunohost service add "clickhouse-server" --needs_exposed_ports "$port_clickhouse_secure" --description="ClickHouse Server" --log="/var/log/clickhouse-server/clickhouse-server.log"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting $app's systemd service..." --weight=1

### `ynh_systemd_action` is used to start a systemd service for an app.
### Only needed if you have configure a systemd service
### If you're not using these lines:
###   - Remove the section "STOP SYSTEMD SERVICE" and "START SYSTEMD SERVICE" in the backup script
###   - As well as the section "START SYSTEMD SERVICE" in the restore script
###   - As well as the section"STOP SYSTEMD SERVICE" and "START SYSTEMD SERVICE" in the upgrade script
###   - And the section "STOP SYSTEMD SERVICE" and "START SYSTEMD SERVICE" in the change_url script

# Start a systemd service
ynh_systemd_action --service_name="clickhouse-server" --action="start" --log_path="/var/log/clickhouse-server/clickhouse-server.log"

#=================================================
# SETUP APPLICATION WITH SQL
#=================================================

ynh_script_progression --message="Finalizing installation..." --weight=1

clickhouse-client --secure --port $port_clickhouse_secure --user $admin --password $password --query "CREATE ROLE IF NOT EXISTS ldap_user_role SETTINGS PROFILE 'readonly'"
clickhouse-client --secure --port $port_clickhouse_secure --user $admin --password $password --query "GRANT ALL ON *.* TO ldap_user_role"
clickhouse-client --secure --port $port_clickhouse_secure --user $admin --password $password --query "CREATE QUOTA ldap_limited KEYED BY user_name FOR INTERVAL 1 hour MAX queries = 1000, FOR INTERVAL 1 day MAX queries = 10000 TO ldap_user_role"

#=================================================
# END OF SCRIPT
#=================================================
ynh_script_progression --message="Installation of $app completed" --last
